assert_spec x86

create_boot_directory
build {
	core init timer
	lib/ld lib/vfs
	drivers/platform
	drivers/acpi
	drivers/ahci
	drivers/rtc
	app/pci_decode
	server/report_rom
	server/vfs
	lib/vfs_lwext4
	lib/libc
	lib/libm
	server/vfs_block
}

#
# Build Ext4-file-system image
#
set image_size 16
catch { exec $dd if=/dev/zero of=bin/ext4.raw bs=1M seek=$image_size count=0 }
catch { exec $mke4fs -O^metadata_csum -F bin/ext4.raw }
catch { exec $dd if=/dev/zero of=bin/block0.raw bs=1M seek=$image_size count=0 }
catch { exec $mke4fs -O^metadata_csum -F bin/block0.raw }

create_boot_directory

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer" priority="0">
		<resource name="RAM" quantum="1M"/>
		<resource name="CPU" quantum="5"/>
		<provides><service name="Timer"/></provides>
	</start>


	<start name="rtc_drv" priority="0">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Rtc"/>
		</provides>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config>
			<policy label="pci_decode -> system"    report="acpi_drv -> acpi"/>
			<policy label="platform_drv -> devices" report="pci_decode -> devices"/>
		</config>
	</start>

	<start name="acpi_drv" caps="350">
		<resource name="RAM" quantum="4M"/>
		<route>
			<service name="Report"> <child name="report_rom"/> </service>
			<service name="IO_MEM"> <parent/> </service>
			<service name="LOG">    <parent/> </service>
			<service name="PD">     <parent/> </service>
			<service name="RM">     <parent/> </service>
			<service name="CPU">    <parent/> </service>
			<service name="ROM">    <parent/> </service>
		</route>
	</start>

	<start name="pci_decode" caps="350">
		<resource name="RAM" quantum="2M"/>
		<route>
			<service name="Report">             <child name="report_rom"/> </service>
			<service name="ROM" label="system"> <child name="report_rom"/> </service>
			<service name="IO_MEM"> <parent/> </service>
			<service name="LOG">    <parent/> </service>
			<service name="PD">     <parent/> </service>
			<service name="RM">     <parent/> </service>
			<service name="CPU">    <parent/> </service>
			<service name="ROM">    <parent/> </service>
		</route>
	</start>

	<start name="platform_drv" caps="100" managing_system="yes">
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Platform"/>
		</provides>
		<route>
			<service name="ROM" label="devices"> <child name="report_rom"/> </service>
			<service name="Report"> <child name="report_rom"/> </service>
			<service name="IRQ">     <parent/> </service>
			<service name="IO_MEM">  <parent/> </service>
			<service name="IO_PORT"> <parent/> </service>
			<service name="ROM">     <parent/> </service>
			<service name="PD">      <parent/> </service>
			<service name="CPU">     <parent/> </service>
			<service name="LOG">     <parent/> </service>
			<service name="Timer">   <child name="timer"/> </service>
		</route>
		<config>
			<report devices="yes"/>
			<policy label="ahci_drv -> "> <pci class="AHCI"/> </policy>
		</config>
	</start>

	<start name="ahci_drv">
		<resource name="RAM" quantum="10M"/>
		<provides><service name="Block"/></provides>
		<config atapi="yes">
			<report ports="yes"/>
			<policy label="vfs_lwext4_fs -> " device="0" writeable="yes" />
			<policy label="isomem -> " device="0" writeable="yes" />			
		</config>
	</start>
	
 	<start name="vfs_lwext4_fs">
 		<binary name="vfs"/>
 		<resource name="RAM" quantum="24M" />
 		<provides><service name="File_system"/></provides>
 		<config ld_verbose="yes">
 			<vfs>
 				<dir name="dev">
 					<block name="hdd" block_buffer_count="128"/>
 				</dir>
 				<lwext4 block_device="/dev/hdd" cache_write_back="yes" expand_via_io="yes" writeable="yes"/>
 			</vfs>
 			<policy label_prefix="isomem" root="/" writeable="yes"/>
 		</config>
		<route>
			<service name="Block"><child name="ahci_drv"/></service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
 	</start>
	
	<start name="isomem" caps="2000">
 	  <resource name="RAM" quantum="700M"/>
	  
 	  <config verbose="yes" ld_verbose="true">
	    <large seek="yes"/>
	    <vfs>
              <dir name="squid-cache"> <ram /> </dir>
	      <fs/>
	    </vfs>
	    <libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc"/>		  
 	  </config>
 	  <route>
 	    <service name="Block"><child name="ahci_drv"/></service>
 	    <any-service> <parent/> <any-child /> </any-service>
 	  </route>
 	</start>
</config> }


#
# Boot modules
#
build_boot_image [list {*}[build_artifacts] phantom_classes isomem]

append qemu_args " -smp 2 "
# append qemu_args " -serial chardev:uart"
# append qemu_args " -chardev socket,id=uart,port=5555,host=localhost,server=on,wait=off,ipv4=on"
# append qemu_args " -s -S "
# append qemu_args " -m 1024 -cpu qemu64 "
append qemu_args " -device ahci,id=ahci -boot d "
append qemu_args " -nographic "
append qemu_args " -drive id=disk,file=bin/ext4.raw,format=raw,if=none             -device ide-hd,drive=disk,bus=ahci.0 "
append qemu_args " -drive id=disk1,file=bin/block0.raw,format=raw,if=none             -device ide-hd,drive=disk1,bus=ahci.1 "

run_genode_until forever
